<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="interface-suite.xml" />
	<munit:test name="notes_app-api-main-test" doc:id="fad3ec9d-c766-47bc-aec8-3d47be521455" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock APIkit Router" doc:id="bca9f0a2-73ed-4196-8c1f-ab790a46a1d7" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="5bcd66ef-30d3-4790-9966-afc35b2c8502" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://notesappapimaintest\mock_payload2.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://notesappapimaintest\mock_variable_4.dwl')]" />
						<munit-tools:variable key="httpStatus" value="#[readUrl('classpath://notesappapimaintest\mock_variable_5.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="9041bdef-2c52-430f-9e61-5161c738cf0c" >
				<munit:payload value="#[readUrl('classpath://notesappapimaintest\set-event_payload5.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://notesappapimaintest\set-event_attributes5.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to notes_app-api-main" doc:id="7ab1d40b-1875-4871-b7a8-1dc77dc70829" name="notes_app-api-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="7a3e700e-764f-40d9-bd5c-589b6a688db5" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import notesappapimaintest::assert_expression_payload5
---
assert_expression_payload5::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="notes_app-api-console-test" doc:id="c9f54f02-5663-4f20-8018-35ff452ec216" >
		<munit:behavior >
			<munit-tools:spy doc:name="Spy APIkit Console" doc:id="7c4587d3-ed4a-4040-97fb-5d91cfb56ddf" processor="apikit:console">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="f82b24c3-ef81-4cf1-b20a-61f1d8237e6c" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:before-call >
					<munit-tools:assert doc:name="Assert payload" doc:id="125ab947-6bda-4efb-8453-21b17c6a4669" message="The payload does not match">
						<munit-tools:that ><![CDATA[#[%dw 2.0
import notesappapiconsoletest::spy_assert_payload
---
spy_assert_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
					</munit-tools:assert>
				</munit-tools:before-call>
				<munit-tools:after-call >
					<munit-tools:assert doc:name="Assert payload" doc:id="88c270ec-7b2f-417d-8462-9ff0bcd911a4" message="The payload does not match">
						<munit-tools:that ><![CDATA[#[%dw 2.0
import notesappapiconsoletest::spy_assert_payload1
---
spy_assert_payload1::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
					</munit-tools:assert>
				</munit-tools:after-call>
			</munit-tools:spy>
			<munit:set-event doc:name="Set Input" doc:id="a72267ec-5d8e-4a43-a9d9-8f632e2c81d3" >
				<munit:payload value="#[readUrl('classpath://notesappapiconsoletest\set-event_payload3.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://notesappapiconsoletest\set-event_attributes3.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to notes_app-api-console" doc:id="4f2b1a39-6eed-4c1b-ad22-0c7fab40320b" name="notes_app-api-console"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="7ccf936b-de50-41e2-92ca-7d0169e7d775" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import notesappapiconsoletest::assert_expression_payload3
---
assert_expression_payload3::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify APIkit Console" doc:id="4cb0f2a9-fe47-4269-a70f-8fe803539514" processor="apikit:console" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="f82b24c3-ef81-4cf1-b20a-61f1d8237e6c" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>


</mule>
